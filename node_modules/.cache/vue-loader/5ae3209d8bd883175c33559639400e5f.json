{"remainingRequest":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\vscode\\gocode\\cloudMusic\\src\\components\\common\\muiScroll\\MuiScroll.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\vscode\\gocode\\cloudMusic\\src\\components\\common\\muiScroll\\MuiScroll.vue","mtime":1605347186000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoqIHsKICB0b3VjaC1hY3Rpb246IG5vbmU7Cn0K"},{"version":3,"sources":["MuiScroll.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA","file":"MuiScroll.vue","sourceRoot":"src/components/common/muiScroll","sourcesContent":["<template>\n  <div id=\"refreshContainer\" class=\"mui-scroll-wrapper\">\n    <div class=\"mui-scroll\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\n// 使用 muiScroll 滚动组件之前必须先按照路径引入 js 文件\nimport mui from \"assets/mui/js/mui.min.js\"; // 引入 mui js 文件\n\nexport default {\n  name: \"MuiScroll\",\n  props: {\n    //   是否回弹\n    bounce: {\n      type: Boolean,\n      default: true,\n    },\n    // 是否垂直滚动\n    scrollY: {\n      type: Boolean,\n      default: false,\n    },\n    // 是否水平滚动\n    scrollX: {\n      type: Boolean,\n      default: false,\n    },\n    // 是否显示滚动条\n    indicators: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      muiscroll: null,\n      linScroll: null,\n    };\n  },\n  methods: {\n    mscrollTo() {\n      mui(\".mui-scroll-wrapper\").scroll().scrollTo(0, 0, 300);\n    },\n\n    linterScroll(){\n      document\n      .querySelector(\".mui-scroll-wrapper\")\n      .addEventListener(\"scroll\", (e) => {\n        // 事件传递\n        // this.$emit(\"listenerMSC\", this.linScroll.y);\n        return this.linScroll.y\n        // this.$emit('listenerMSC2',scroll.y)\n      })\n    }\n  },\n  created() {\n    // console.log(this.$store.state.getComMore);\n  },\n  mounted() {\n    mui.init();\n    this.muiscroll = mui(\".mui-scroll-wrapper\").scroll({\n      bounce: this.bounce, //是否回弹\n      scrollY: this.scrollY, //是否竖向滚动\n      scrollX: this.scrollX, //是否横向滚动\n      startX: 0, //初始化时滚动至x\n      startY: 0, //初始化时滚动至y\n      deceleration: 0.0005,\n      indicators: this.indicators, //是否显示滚动条\n    });\n    // console.log(this.muiscroll.scroll);\n    // this.muiscroll.scrollTo(0,0)\n\n    // 监听滚动\n    this.linScroll = mui(\".mui-scroll-wrapper\").scroll();\n    var scroll = mui(\".mui-scroll-wrapper\").scroll();\n    document\n      .querySelector(\".mui-scroll-wrapper\")\n      .addEventListener(\"scroll\", (e) => {\n        // 事件传递\n        this.$emit(\"listenerMSC\", scroll.y);\n        // this.$emit('listenerMSC2',scroll.y)\n      })\n  }\n};\n</script>\n<style>\n* {\n  touch-action: none;\n}\n</style>"]}]}