{"remainingRequest":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\vscode\\gocode\\cloudMusic\\src\\components\\common\\tabbar\\tabbaritem.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\vscode\\gocode\\cloudMusic\\src\\components\\common\\tabbar\\tabbaritem.vue","mtime":1605347186000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6J3RhYmJhcml0ZW0nLAogICAgcHJvcHM6IHsKICAgICAgICAvLyDmjIflrpogcGF0aCDlsZ7mgKfnmoTlgLzmmK8g5a2X56ym5Liy57G75Z6LCiAgICAgICAgcGF0aDogU3RyaW5nLAogICAgICAgIGFjdGl2ZUNvbG9yOiB7CiAgICAgICAgICAgIC8vIOaMh+Wumum7mOiupOexu+Wei+S4uiDlrZfnrKbkuLIKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICAvLyDlpoLmnpzkuI3kvKDpgJLlj4LmlbDpu5jorqQgcmVkCiAgICAgICAgICAgIGRlZmF1bHQ6ICdyZWQnCiAgICAgICAgfQogICAgfSwKICAgIGRhdGEgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIC8vIGlzQWN0aXZlOnRydWUKICAgICAgICB9CiAgICB9LAogICAgLy8g6K6h566X5bGe5oCnCiAgICBjb21wdXRlZDogewogICAgICAgIGlzQWN0aXZlKCl7CiAgICAgICAgICAgIC8vIOWPquacieW9k+WJjea0u+i3g+eKtuaAgeS4i+eahCDnu4Tku7Yg5omN5pyJICRyb3V0ZSDlsZ7mgKcKICAgICAgICAgICAgLy8g5qOA5p+l5rS76LeD57uE5Lu255qEIHBhdGgg5piv5ZCmIGluZGV4T2Yo5YyF5ZCrKSB0aGlzLnBhdGgKICAgICAgICAgICAgLy8gIT09IC0xIOihqOekuuWMheWQqwogICAgICAgICAgICByZXR1cm4gdGhpcy4kcm91dGUucGF0aC5pbmRleE9mKHRoaXMucGF0aCkgIT09IC0xCiAgICAgICAgfSwKICAgICAgICAvLyDmoLnmja7kvKDlhaXnmoTlj4LmlbDop4nlvpflrZfkvZPpopzoibIKICAgICAgICBzdHlsZUNvbG9yKCl7CiAgICAgICAgICAgIC8vIHRoaXMuaXNBY3RpdmUg5b2T5YmN5aSE5LqO5rS76LeD54q25oCB5LiLCiAgICAgICAgICAgIC8vIOS4ieWFg+i/kOeul+espui/m+ihjOWIpOaWrQogICAgICAgICAgICByZXR1cm4gdGhpcy5pc0FjdGl2ZSA/IHtjb2xvcjogdGhpcy5hY3RpdmVDb2xvcn0gOiB7fQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgaXNTaG93KCl7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuJHJvdXRlcik7CiAgICAgICAgICAgIC8vIHJlcGxhY2Xmm7/mjaIgICBwdXNo5aKe5YqgCiAgICAgICAgICAgIC8vIOa3u+WKoCAuY2F0Y2goKCk9Pnt9KSAg6Kej5Yaz6YeN5aSN54K55Ye75oql6ZSZ55qE6Zeu6aKYCiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5yZXBsYWNlKHRoaXMucGF0aCkuY2F0Y2goKCk9Pnt9KQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["tabbaritem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tabbaritem.vue","sourceRoot":"src/components/common/tabbar","sourcesContent":["<template>\n<!-- 导航栏的内容组件 -->\n    <div class=\"tab-bar-item\" @click='isShow'>\n        <!-- 在每一个小组件中定义两个插槽 -->\n        <!-- 通过name属性 将指定内容放入指定的插槽当中 -->\n        <!-- 通过v-if v-else 指令来决定 显示哪张图标 -->\n        <slot v-if='!isActive' name='item-icon'></slot>\n        <!-- 这个插槽用于放入获取状态的图标 -->\n        <slot v-else name='item-icon-active'></slot>\n        <div :style=\"styleColor\"><slot name='item-text'></slot></div>\n        <!-- <img src=\"../../assets/img/index.png\" alt=\"\">\n        <div>首页</div> -->\n    </div>\n</template>\n\n<script>\nexport default {\n    name:'tabbaritem',\n    props: {\n        // 指定 path 属性的值是 字符串类型\n        path: String,\n        activeColor: {\n            // 指定默认类型为 字符串\n            type: String,\n            // 如果不传递参数默认 red\n            default: 'red'\n        }\n    },\n    data () {\n        return {\n            // isActive:true\n        }\n    },\n    // 计算属性\n    computed: {\n        isActive(){\n            // 只有当前活跃状态下的 组件 才有 $route 属性\n            // 检查活跃组件的 path 是否 indexOf(包含) this.path\n            // !== -1 表示包含\n            return this.$route.path.indexOf(this.path) !== -1\n        },\n        // 根据传入的参数觉得字体颜色\n        styleColor(){\n            // this.isActive 当前处于活跃状态下\n            // 三元运算符进行判断\n            return this.isActive ? {color: this.activeColor} : {}\n        }\n    },\n    methods: {\n        isShow(){\n            // console.log(this.$router);\n            // replace替换   push增加\n            // 添加 .catch(()=>{})  解决重复点击报错的问题\n            this.$router.replace(this.path).catch(()=>{})\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .tab-bar-item{\n        /* flex 为 1 的时候会自动分配宽度 */\n        flex: 1;\n        text-align: center;\n        /* 移动端tabbar默认高度是49 */\n        height: 49px;\n        font-size: 13px;\n    }\n    .tab-bar-item img{\n        width: .665779rem;\n        height: .665779rem;\n        margin-top: .079893rem;\n        /* 去除图片下面默认的 3 px */\n        vertical-align: middle;\n    }\n    .activeSize{\n        color: red;\n    }\n</style>"]}]}