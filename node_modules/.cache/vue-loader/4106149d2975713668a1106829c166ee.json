{"remainingRequest":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\vscode\\gocode\\cloudMusic\\src\\components\\common\\playSong\\PlaySong.vue?vue&type=style&index=0&id=071452db&scoped=true&lang=css&","dependencies":[{"path":"F:\\vscode\\gocode\\cloudMusic\\src\\components\\common\\playSong\\PlaySong.vue","mtime":1605347186000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouUGxheVNvbmdOYXYgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMzBweDsKICBkaXNwbGF5OiBmbGV4Owp9Ci5uYXZpdGVtIHsKICBmbGV4OiAxOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoubmF2aXRlbSBpbWcgewogIG1hcmdpbi10b3A6IDZweDsKICB3aWR0aDogMjBweDsKICBoZWlnaHQ6IDIwcHg7Cn0KLnNvbmdib3ggewogIGhlaWdodDogOTUlOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB6LWluZGV4OiA1MjsKICBvdmVyZmxvdy14OiBoaWRkZW47Cn0KLnBsYXkgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB6LWluZGV4OiA1MDA7Cn0KLlBsYXlTb25nIHsKICBjb2xvcjogI2ZmZjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgei1pbmRleDogNTA7CiAgaGVpZ2h0OiAxMDB2aDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOSk7Cn0KLmxvZ28gewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogNzAlOwogIC8qIGJhY2tncm91bmQtY29sb3I6IHJlZDsgKi8KfQouZ3VhbnAgewogIHdpZHRoOiAzNDBweDsKICBoZWlnaHQ6IDM0MHB4OwogIG1hcmdpbjogMCBhdXRvOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB0b3A6IDEzJTsKfQoubG9nbyAuaW1nIHsKICB3aWR0aDogMzQwcHg7CiAgaGVpZ2h0OiAzNDBweDsKfQouc29uZ0ltZyB7CiAgd2lkdGg6IDE1NXB4OwogIGhlaWdodDogMTU1cHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogODhweDsKICBsZWZ0OiA5NnB4OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICBvdmVyZmxvdzogaGlkZGVuOwp9Ci5zb25nSW1nIGltZyB7CiAgd2lkdGg6IDEwMiU7CiAgaGVpZ2h0OiAxMDIlOwp9Ci5wbGF5Ym94IHsKICBkaXNwbGF5OiBmbGV4OwogIG1hcmdpbi10b3A6IDZweDsKfQouc3RhcnQgewogIGZvbnQtc2l6ZTogMTBweDsKICBsaW5lLWhlaWdodDogNDBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZmxleDogMTsKfQouZW5kIHsKICBmb250LXNpemU6IDEwcHg7CiAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZsZXg6IDE7Cn0KLnRpbWUgewogIGZsb2F0OiByaWdodDsKfQouUGxheVNvbmdUaW1lIHsKICBoZWlnaHQ6IDQwcHg7CiAgZmxleDogNjsKfQouYm94IHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgdG9wOiAxOHB4OwogIGZsb2F0OiBsZWZ0Owp9Ci5jdXN0b20tYnV0dG9uIHsKICB3aWR0aDogMTJweDsKICBoZWlnaHQ6IDEycHg7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQtY29sb3I6ICNlZTBhMjQ7Cn0KLmx5cmljIHsKICBoZWlnaHQ6IDcwJTsKfQoudi1lbnRlciB7CiAgb3BhY2l0eTogMDsKICAvKiDov5vmnaXnmoTml7blgJnku47lj7MgKi8KICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7Cn0KLnYtbGVhdmUtdG8gewogIG9wYWNpdHk6IDA7CiAgLyog56a75byA55qE5pe25YCZ5ZCR5bemICovCiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsKICBwb3NpdGlvbjogYWJzb2x1dGU7Cn0KCi8qIOWKqOeUu+aJp+ihjOacn+mXtCAqLwoudi1lbnRlci1hY3RpdmUsCi52LWxlYXZlLWFjdGl2ZSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIC8qIOa3u+WKoOWKqOeUu+aViOaenCAqLwogIHRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjsKfQoubG9nby1lbnRlciB7CiAgb3BhY2l0eTogMTsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgei1pbmRleDogLTEwOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzUwcHgpOwp9Ci5sb2dvLWxlYXZlLXRvIHsKICBvcGFjaXR5OiAxOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB6LWluZGV4OiAtMTA7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zNTBweCk7Cn0KCi5sb2dvLWVudGVyLWFjdGl2ZSwKLmxvZ28tbGVhdmUtYWN0aXZlIHsKICB0cmFuc2l0aW9uOiAwLjhzIGFsbCBlYXNlLWluLW91dDsKfQoKLmx5cmljLWVudGVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgei1pbmRleDogLTEwOwogIG9wYWNpdHk6IDE7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDM1MHB4KTsKfQoubHlyaWMtbGVhdmUtdG8gewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDQyLjVweDsKICB6LWluZGV4OiAxOwogIG9wYWNpdHk6IDE7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDcwMHB4KTsKfQoKLmx5cmljLWVudGVyLWFjdGl2ZSwKLmx5cmljLWxlYXZlLWFjdGl2ZSB7CiAgdHJhbnNpdGlvbjogMC44cyBhbGwgZWFzZS1pbi1vdXQ7Cn0K"},{"version":3,"sources":["PlaySong.vue"],"names":[],"mappingsfile":"PlaySong.vue","sourceRoot":"src/components/common/playSong","sourcesContent":["<template>\n  <div\n    class=\"songbox\"\n    :style=\"{\n      background: 'url(' + bgimg + ') no-repeat ',\n      backgroundSize: size,\n    }\"\n  >\n    <div class=\"PlaySong\">\n      <sheet-topnav\n        @fx=\"fx\"\n        :navTitle=\"navTitle\"\n        :rightImg=\"rightImg\"\n      ></sheet-topnav>\n      <transition name=\"logo\" mode=\"out-in\">\n        <div v-show=\"showLogo\" @click=\"isShowLogo\" class=\"logo\">\n          <div ref=\"guanp\" class=\"guanp\">\n            <img class=\"img\" src=\"~assets/img/playSong/gp3.png\" alt=\"\" />\n            <div class=\"songImg\">\n              <img :src=\"bgimg\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n      </transition>\n      <transition name=\"lyric\" mode=\"out-in\">\n        <lyric-list\n          @click.native=\"isShowLyric\"\n          v-show=\"showLyric\"\n          :lyricText=\"lyricText\"\n          :songLyric=\"songLyric\"\n          :value=\"value\"\n          :songTime=\"songTime\"\n          :cTime=\"cTime\"\n          :indexLyric=\"indexLyric\"\n          class=\"lyric\"\n        ></lyric-list>\n      </transition>\n      <div class=\"nav\">\n        <div class=\"PlaySongNav\">\n          <div class=\"navitem\">\n            <img src=\"~assets/img/playSong/xinaixin.svg\" alt=\"\" />\n          </div>\n          <div class=\"navitem\">\n            <img src=\"~assets/img/playSong/xiazai.svg\" alt=\"\" />\n          </div>\n          <div class=\"navitem\">\n            <img src=\"~assets/img/playSong/changge.svg\" alt=\"\" />\n          </div>\n          <div class=\"navitem\" @click=\"isShowComment\">\n            <img src=\"~assets/img/playSong/pinglun.svg\" alt=\"\" />\n          </div>\n          <div class=\"navitem\">\n            <img src=\"~assets/img/playSong/gengduo.svg\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n      <!-- 进度条 -->\n      <div class=\"playbox\">\n        <div class=\"start\">\n          {{ minT > 9 ? minT : \"0\" + minT }}:{{\n            secondT > 9 ? secondT : \"0\" + secondT\n          }}\n        </div>\n        <div class=\"PlaySongTime\">\n          <van-slider\n            class=\"box\"\n            v-model=\"value\"\n            active-color=\"#ee0a24\"\n            bar-height=\"3px\"\n            inactive-color=\"#cdcdcd\"\n            @change=\"onChange\"\n          >\n            <template #button>\n              <div class=\"custom-button\"></div>\n            </template>\n          </van-slider>\n        </div>\n        <div class=\"end\">{{ songLength }}</div>\n      </div>\n      <!-- 按钮组 -->\n      <bnav ref=\"bnav\" @playBtn=\"playBtn\"></bnav>\n    </div>\n    <!-- 评论组件 -->\n    <transition>\n      <comment-list\n        @toback=\"toback\"\n        v-show=\"showComment\"\n        :showComment=\"showComment\"\n      ></comment-list>\n    </transition>\n    <van-share-sheet\n      v-model=\"showShare\"\n      title=\"立即分享给好友\"\n      :options=\"options\"\n    />\n  </div>\n</template>\n\n<script>\nimport sheetTopnav from \"components/context/sheetNav/SheetTopNav\"; // 导航栏\nimport Bnav from \"./childrenComps/PlaySongBnav\"; // 底部导航栏\nimport PlaysongTime from \"./childrenComps/PlaySongTime\"; // 进度条\nimport LyricList from \"components/common/lyricList/LyricList\"; // 歌词列表\nimport commentList from \"components/common/commentList/CommentList\";\n\nimport { getSongDetial } from \"network/played\"; // 获取歌曲基本信息\nimport { playSong, getlyric } from \"network/playSong\"; // 获取音乐url 歌词 评论\n\nimport mscroll from \"components/common/muiScroll/MuiScroll\";\n\nexport default {\n  name: \"PlaySong\",\n  data() {\n    return {\n      navTitle: \"\", // 歌曲标题\n      rightImg: require(\"assets/img/playSong/fenxiang.svg\"),\n      id: \"\", // 音乐id\n      bgimg: \"\", // 封面图\n      songUrl: \"\", // 音乐url\n      singer: \"\", // 歌手\n      songLength: 0, // 音乐长度\n      audioDom: \"\", // audio标签\n      value: 0,\n      timeS: null, // 定时器\n      songTime: 0, // 音乐总秒数\n      secondT: 0, // 左侧进度条秒数\n      minT: 0, // 左侧进度条分钟数\n      size: \"200% 300%\", // 背景图大小\n      rotateLogo: null, // 控制封面旋转\n      rotateDeg: 0, // 封面旋转定时器\n      showLogo: true, // 显示/隐藏logo\n      lyricText: [], // 保存歌词\n      cTime: 0, // 歌曲实时秒数\n      songLyric: [], // 歌曲时间戳\n      showLyric: false, // 歌曲列表显示/隐藏\n      indexLyric: 0,\n      isPlayM: 0, // 是否播放了音乐\n      timeNew: 0,\n      showComment: false, // 显示隐藏评论组件\n      showShare: false, // 分享面板\n      options: [\n        // 分享面板\n        [\n          { name: \"微信\", icon: \"wechat\" },\n          { name: \"微博\", icon: \"weibo\" },\n          { name: \"QQ\", icon: \"qq\" },\n        ],\n        [\n          { name: \"复制链接\", icon: \"link\" },\n          { name: \"分享海报\", icon: \"poster\" },\n          { name: \"二维码\", icon: \"qrcode\" },\n        ],\n      ],\n    };\n  },\n  components: {\n    sheetTopnav,\n    Bnav,\n    PlaysongTime,\n    LyricList,\n    commentList,\n  },\n  methods: {\n    // 分享面板\n    fx() {\n      this.showShare = true;\n    },\n\n    toback() {\n      this.showComment = false;\n    },\n\n    isShowComment() {\n      this.showComment = true;\n    },\n\n    // 监听播放器\n    timeupdate(currentTime) {\n      this.cTime = this.audioDom.currentTime;\n    },\n\n    isShowLogo() {\n      this.showLogo = false;\n      this.showLyric = true;\n    },\n\n    isShowLyric() {\n      this.showLogo = true;\n      this.showLyric = false;\n    },\n\n    // 播放/暂停音乐\n    playBtn() {\n      // 操作dom 播放音乐\n      if (this.$store.state.playSong.playNow) {\n        this.$store.state.playSong.isPlayEnd = true;  // 播放暂停\n        this.$store.state.playSong.playNow = false; // 修改判断条件\n        this.$store.state.navMusicDom.pause(); // 暂停\n        this.$refs.bnav.endImg(); // 切换图标\n        clearInterval(this.rotateLogo); // 暂停封面旋转\n        clearInterval(this.timeS); // 暂停时间\n        // 当歌曲完全播放结束后\n        if (this.value >= 100) {\n          this.$store.state.playSong.isPlayEnd = false; // 重新播放\n          this.$store.state.playSong.playNow = false; // 修改判断条件\n          this.$refs.guanp.style.transform = \"rotate(0deg)\"; // 封面旋转重置\n          this.$store.state.navMusicDom.currentTime = 0; // 重置播放时间\n          this.$refs.bnav.playingImg(); // 更换图标\n          this.value = 0; // 清空进度条\n          this.minT = 0; // 清空时间\n          this.secondT = 0; // 清空时间\n          clearInterval(this.time); // 防止多个定时器  清除定时器\n          this.timeS = setInterval(this.setInPlay, 1000); // 计算时间\n          this.$store.state.navMusicDom.play(); // 重新播放音乐\n        }\n        // 目前处于播放状态\n      } else {\n        this.$store.state.playSong.isPlayEnd = false;\n        this.$store.state.playSong.playNow = true; // 修改判断条件\n        this.$store.state.navMusicDom.play(); // 播放音乐\n        this.$refs.bnav.playingImg(); // 更换图片\n        clearInterval(this.rotateLogo); // 防止多个定时器  清除定时器\n        this.rotateLogo = setInterval(this.rotate, 30); // 封面旋转\n        clearInterval(this.time); // 防止多个定时器  清除定时器\n        this.timeS = setInterval(this.setInPlay, 1000);\n      }\n    },\n\n    // 封装封面旋转方法\n    rotate() {\n      this.rotateDeg += 1;\n      // 修改 style 的 transform 属性\n      if (this.$refs.guanp) {\n        this.$refs.guanp.style.transform = \"rotate(\" + this.rotateDeg + \"deg)\";\n      }\n    },\n\n    // 封装方法\n    setInPlay() {\n      // 进度条时间更新\n      this.secondT++;\n      if (this.secondT > 59) {\n        this.minT++;\n        this.secondT = 0;\n      }\n      this.isPlayM += 1;\n      // 控制 value 增加进度条会移动\n      // 100 / 获取歌曲总秒数 = 每秒增加的 value\n      // 当 value 到 100 的时候 音乐也会播放完成\n      this.value += 100 / this.songTime;\n      // 当 value 到100表示播放结束\n      if (this.value >= 100) {\n        this.$store.state.playSong.playNow = true; // 修改判断条件\n        this.$store.state.playSong.isPlayEnd = true;  // 播放结束\n        clearInterval(this.timeS); // value等于100表示播放结束\n        this.value = 100;\n        this.$refs.bnav.endImg();\n        clearInterval(this.rotateLogo);\n        if (this.$refs.guanp !== undefined) {\n          this.$refs.guanp.style.transform = \"rotate(0deg)\";\n        }\n      }\n    },\n\n    // 监听audio加载事件\n    songLoad() {\n      this.songTime = this.$store.state.navMusicDom.duration.toFixed(2); // 保存歌曲时间\n      let time = this.$store.state.navMusicDom.duration;\n      let min =\n        Math.floor(this.songTime / 60).toFixed(0) > 10\n          ? Math.floor(this.songTime / 60).toFixed(0)\n          : \"0\" + Math.floor(this.songTime / 60).toFixed(0); // 分钟\n      let second =\n        this.songTime % 60 > 9\n          ? this.songTime % 60\n          : \"0\" + (this.songTime % 60); // 秒数\n      let length = (min + \":\" + second).slice(5);\n      this.songLength = (min + \":\" + second).replace(length, \" \");\n    },\n\n    // 歌曲进度跳转\n    onChange(value) {\n      this.cTime = this.$store.state.navMusicDom.currentTime\n      this.setTime(value); // 调用方法\n    },\n\n    // 设置歌曲时间\n    setTime(value) {\n      clearInterval(this.rotateLogo); // 清除重复定时器\n      clearInterval(this.timeS);\n      this.$refs.bnav.playingImg(); // 切换图标\n      this.$store.state.navMusicDom.pause(); // 先暂停歌曲\n\n      let timeAll = 100 / this.$store.state.navMusicDom.duration; // 计算一秒增加多少 value\n      this.$store.state.navMusicDom.currentTime = value / timeAll; // 计算出拖动按钮后  歌曲对应播放的时间点\n      this.minT = Math.floor(this.$store.state.navMusicDom.currentTime / 60); // 计算出分钟数\n      this.secondT = (this.$store.state.navMusicDom.currentTime % 60).toFixed(\n        0\n      ); // 计算秒数\n      this.cTime = this.$store.state.navMusicDom.currentTime; // 将拖到后的秒数保存传递给 歌单滚动 组件\n      this.$store.state.navMusicDom.play(); // 播放\n      this.rotateLogo = setInterval(this.rotate, 30); // 开启定时器\n\n      this.timeS = setInterval(this.setInPlay, 1000);\n      if (this.value >= 100) {\n        this.value = 100;\n        this.$refs.bnav.endImg();\n        clearInterval(this.timeS); // value等于100表示播放结束\n      }\n    },\n  },\n  created() {\n    this.$store.state.playSong.isPlayEnd = true; // 进入页面即自动播放\n    // 获取歌曲基本信息\n    getSongDetial(this.$route.params.sid).then((res) => {\n      let result = res.data.songs[0];\n      this.singer = result.ar[0].name; // 歌手\n      this.navTitle = result.name; // 歌曲名称\n      this.id = result.id; // 歌曲id\n      this.bgimg = result.al.picUrl; // 歌曲封面\n\n      this.$store.state.playSong.songName = result.name; // 歌曲名称\n      this.$store.state.playSong.singer = result.ar[0].name; // 歌手\n      this.$store.state.playSong.picUrl = result.al.picUrl; // 歌曲封面\n      playSong(this.id).then((res) => {\n        // 歌曲url\n        if (this.$store.state.playSong.songId !== this.$route.params.sid) {\n          this.$store.state.playSong.index = 1; // 判断是否页面被打开\n          this.$store.state.navMusicDom.src = res.data.data[0].url; // 歌曲url\n          this.$store.state.navMusicDom.play(); // 获取完成url播放\n          // 添加监听事件\n          this.$store.state.navMusicDom.addEventListener(\"canplay\", () => {\n            this.songLoad(); // 获取音乐时长\n            clearInterval(this.rotateLogo); // 暂停封面旋转\n            clearInterval(this.timeS); // 暂停时间\n            this.rotateLogo = setInterval(this.rotate, 30); // 封面旋转\n            this.timeS = setInterval(this.setInPlay, 1000); // 时间更新\n          });\n        } else {\n          this.songLoad(); // 获取音乐时长\n          this.value = this.$store.state.navMusicDom.currentTime * (100 / this.$store.state.navMusicDom.duration)  // 更新时间\n          this.setTime(this.value)\n          clearInterval(this.rotateLogo); // 暂停封面旋转\n          clearInterval(this.timeS); // 暂停时间\n          this.rotateLogo = setInterval(this.rotate, 30); // 封面旋转\n          this.timeS = setInterval(this.setInPlay, 1000); // 时间更新\n        }\n        this.$store.state.playSong.songId = this.$route.params.sid;\n      });\n    }),\n      // 获取歌词\n    getlyric(this.$route.params.sid).then((res) => {\n        if (res.data.lrc !== undefined) {\n          let text = res.data.lrc.lyric;\n          let reg = /[\\[|[0-9\\:\\.]|]]/gi; // 正则匹配去除 []\n          let lyric = text.replace(reg, \"\");\n          this.lyricText = lyric.split(\"]\"); // 将字符串转为数组\n          var reg2 = /\\[(.+?)\\]/g; // 正则匹配出时间\n          let time = text.match(reg2); // match 选中匹配成功的内容\n\n          for (let i = 0; i < time.length; i++) {\n            time[i] = time[i].slice(1, 9); // slice 截取\n            time[i] =\n              parseFloat(time[i].slice(0, 2), 2) * 60 +\n              parseFloat(time[i].slice(3, 8), 2); // 截取分秒计算秒数\n          }\n\n          this.songLyric = time;\n          let num = 0;\n          // for循环遍历歌词数组\n          for (let i = 0; i < this.songLyric.length; i++) {\n            // 检查是否有 NaN 设置为 0\n            if (isNaN(this.songLyric[i])) {\n              this.songLyric.splice(i, 1, (num += 0.15));\n            }\n            if (\n              this.songLyric[i] == this.songLyric[i + 1] ||\n              this.songLyric[i] >= this.songLyric[i + 1]\n            ) {\n              this.songLyric.splice(i + 1, 1, this.songLyric[i + 1] + 0.5);\n            }\n          }\n        }\n      });\n  },\n  mounted () {\n    this.$refs.bnav.playingImg();\n  },\n  destroyed () {\n    clearInterval(this.rotateLogo); // 暂停封面旋转\n    clearInterval(this.timeS); // 暂停时间\n  }\n};\n</script>\n<style scoped>\n.PlaySongNav {\n  width: 100%;\n  height: 30px;\n  display: flex;\n}\n.navitem {\n  flex: 1;\n  text-align: center;\n}\n.navitem img {\n  margin-top: 6px;\n  width: 20px;\n  height: 20px;\n}\n.songbox {\n  height: 95%;\n  position: relative;\n  z-index: 52;\n  overflow-x: hidden;\n}\n.play {\n  position: relative;\n  z-index: 500;\n}\n.PlaySong {\n  color: #fff;\n  position: relative;\n  z-index: 50;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.9);\n}\n.logo {\n  width: 100%;\n  height: 70%;\n  /* background-color: red; */\n}\n.guanp {\n  width: 340px;\n  height: 340px;\n  margin: 0 auto;\n  position: relative;\n  top: 13%;\n}\n.logo .img {\n  width: 340px;\n  height: 340px;\n}\n.songImg {\n  width: 155px;\n  height: 155px;\n  position: absolute;\n  top: 88px;\n  left: 96px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n.songImg img {\n  width: 102%;\n  height: 102%;\n}\n.playbox {\n  display: flex;\n  margin-top: 6px;\n}\n.start {\n  font-size: 10px;\n  line-height: 40px;\n  text-align: center;\n  flex: 1;\n}\n.end {\n  font-size: 10px;\n  line-height: 40px;\n  text-align: center;\n  flex: 1;\n}\n.time {\n  float: right;\n}\n.PlaySongTime {\n  height: 40px;\n  flex: 6;\n}\n.box {\n  position: relative;\n  top: 18px;\n  float: left;\n}\n.custom-button {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  color: #fff;\n  background-color: #ee0a24;\n}\n.lyric {\n  height: 70%;\n}\n.v-enter {\n  opacity: 0;\n  /* 进来的时候从右 */\n  transform: translateX(100%);\n}\n.v-leave-to {\n  opacity: 0;\n  /* 离开的时候向左 */\n  transform: translateX(-100%);\n  position: absolute;\n}\n\n/* 动画执行期间 */\n.v-enter-active,\n.v-leave-active {\n  position: absolute;\n  /* 添加动画效果 */\n  transition: all 0.2s linear;\n}\n.logo-enter {\n  opacity: 1;\n  position: absolute;\n  z-index: -10;\n  transform: translateX(-350px);\n}\n.logo-leave-to {\n  opacity: 1;\n  position: absolute;\n  z-index: -10;\n  transform: translateX(-350px);\n}\n\n.logo-enter-active,\n.logo-leave-active {\n  transition: 0.8s all ease-in-out;\n}\n\n.lyric-enter {\n  position: absolute;\n  z-index: -10;\n  opacity: 1;\n  transform: translateX(350px);\n}\n.lyric-leave-to {\n  position: absolute;\n  top: 42.5px;\n  z-index: 1;\n  opacity: 1;\n  transform: translateX(700px);\n}\n\n.lyric-enter-active,\n.lyric-leave-active {\n  transition: 0.8s all ease-in-out;\n}\n</style>"]}]}