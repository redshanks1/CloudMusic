{"remainingRequest":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\vscode\\gocode\\cloudMusic\\src\\views\\video\\Video.vue?vue&type=style&index=0&id=85e8cbc6&scoped=true&lang=css&","dependencies":[{"path":"F:\\vscode\\gocode\\cloudMusic\\src\\views\\video\\Video.vue","mtime":1605347186000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\vscode\\gocode\\cloudMusic\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLlZpZGVvIHsKICB3aWR0aDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwp9Ci5zbmF2IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHRvcDogNDRweDsKICBwb3NpdGlvbjogZml4ZWQ7CiAgbGVmdDogMDsKICByaWdodDogMDsKICB6LWluZGV4OiAxMjsKfQouY29udGVudCB7CiAgbWFyZ2luLXRvcDogMi4yMzcwMTdyZW07CiAgbWFyZ2luLWJvdHRvbTogMS4xOTg0MDJyZW07Cn0KLm5vY29udGVudCB7CiAgd2lkdGg6IDEwMCU7CiAgbWluLWhlaWdodDogMTcuMzEwMjUzcmVtOwogIGZvbnQtc2l6ZTogMC41MzI2MjNyZW07CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbGluZS1oZWlnaHQ6IDE3LjMxMDI1M3JlbTsKfQo="},{"version":3,"sources":["Video.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Video.vue","sourceRoot":"src/views/video","sourcesContent":["<template>\n  <div class=\"Video\">\n    <scrollnav\n      ref=\"videoNav\"\n      class=\"snav\"\n      :itemList=\"itemList\"\n      :firstIndex=\"0\"\n      @tabToggle=\"tabToggle\"\n    ></scrollnav>\n    <div class=\"content\" v-if=\"hasmore\">\n      <mv-item\n        :vedioList=\"vedioList\"\n        :isShowDetail=\"true\"\n        :isShowTag=\"false\"\n        :isMv=\"false\"\n      ></mv-item>\n    </div>\n    <div class=\"nocontent\" v-else>\n      {{ msg }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport scrollnav from \"components/context/scrollNav/ScrollNav\"; // 导航栏\nimport mvItem from \"components/context/mv/MvItem\"; // 视频组件\n\nimport { toStringNum, durationTime } from \"common/common\";\nimport { videoCategory, getDetail } from \"network/video\";\nexport default {\n  name: \"Video\",\n  data() {\n    return {\n      itemList: [0], // 分类列表\n      itemId: [], // id列表\n      offset: 0, // 分页\n      withCredentials: true,\n      vedioList: [], // 视频数组\n      activeId: 0, // 处于活跃状态的分类\n      activeIndex: 0, // 处于活跃状态的分类\n      hasmore: true, // 是否有数据\n      msg: \"\", // 提示\n      more: true,\n    };\n  },\n  components: {\n    scrollnav,\n    mvItem,\n  },\n  methods: {\n    // 导航栏切换\n    tabToggle(index) {\n      // 判断是否切换导航栏\n      if (this.activeIndex !== index) {\n        this.more = true;\n        this.vedioList = []; // 清空数组\n        this.offset = 0; // 清空页数\n        this.getVideoDetail(this.itemId[index]); // 调用方法\n      }\n      this.activeIndex = index;\n    },\n\n    // 封装方法\n    getVideoDetail(id) {\n      if (this.more) {\n        getDetail(id, this.offset, this.$store.state.cookie).then((res) => {\n          this.$loading.loadingShow();\n          this.hasmore = res.data.hasmore;\n          this.more = res.data.hasmore;\n          this.msg = res.data.msg;\n          for (const item of res.data.datas) {\n            this.vedioList.push({\n              imgurl16v9: item.data.coverUrl, // 封面\n              playCount: toStringNum(item.data.playTime), // 播放量\n              duration: durationTime(item.data.durationms), // 时长\n              name: item.data.title, // 标题\n              id: item.data.vid, // vid\n              avatarUrl: item.data.creator.avatarUrl, // 作者头像\n              nickname: item.data.creator.nickname, // 作者昵称\n              praisedCount: item.data.praisedCount, // 点赞数\n              commentCount: item.data.commentCount, // 评论数\n            });\n          }\n          this.offset++;\n          this.$nextTick(() => {\n            this.$loading.loadingNo();\n          });\n        });\n      } else {\n        this.$toast.show(\"没有更多了:(\", 1900);\n      }\n    },\n\n    // 监听滚动事件\n    linearScroll() {\n      // 滚动条距离顶部的距离\n      let scrollTop =\n        document.documentElement.scrollTop || document.body.scrollTop;\n      // 可视区的高度\n      let clientHeight =\n        document.documentElement.clientHeight || document.body.clientHeight;\n      // 滚动条可滚动的高度\n      let scrollHeight =\n        document.documentElement.scrollHeight || document.body.scrollHeight;\n      if (scrollTop + clientHeight >= scrollHeight - 1) {\n        setTimeout(() => {\n          this.getVideoDetail(this.activeId);\n        }, 1000);\n      }\n    },\n  },\n  created() {\n    videoCategory().then((res) => {\n      this.itemList = []; // 清空数组内容\n      this.activeId = res.data.data[0].id; // 保存第一项id\n      for (let i = 0; i < 13; i++) {\n        this.itemList.push(res.data.data[i].name);\n        this.itemId.push(res.data.data[i].id);\n      }\n\n      // 视频列表\n      this.getVideoDetail(this.itemId[0]);\n    });\n  },\n  activated() {\n    this.$nextTick(() => {\n      document.addEventListener(\"scroll\", this.linearScroll);\n    });\n  },\n  deactivated() {\n    document.removeEventListener(\"scroll\", this.linearScroll);\n  },\n};\n</script>\n<style scoped>\n.Video {\n  width: 100%;\n  background-color: #fff;\n}\n.snav {\n  background-color: #fff;\n  top: 44px;\n  position: fixed;\n  left: 0;\n  right: 0;\n  z-index: 12;\n}\n.content {\n  margin-top: 2.237017rem;\n  margin-bottom: 1.198402rem;\n}\n.nocontent {\n  width: 100%;\n  min-height: 17.310253rem;\n  font-size: 0.532623rem;\n  background-color: #fff;\n  text-align: center;\n  line-height: 17.310253rem;\n}\n</style>"]}]}